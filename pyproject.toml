[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "phoenix-smartcaseai"
dynamic = ["version"]
authors = [
    {name = "Phoenix SmartCase AI", email = "support@phoenixsmartcase.ai"},
]
description = "AI-powered test case generation from user stories using LLMs"
readme = "README.md"
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Testing",
    "Topic :: Software Development :: Quality Assurance",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
keywords = [
    "test-case-generation",
    "bdd",
    "gherkin", 
    "ai",
    "llm",
    "openai",
    "testing",
    "qa",
    "user-stories",
    "automation"
]
dependencies = [
    "pydantic>=2.11.0",
    "langchain-core>=0.3.70",
    "langchain-openai>=0.3.30",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/Phoenix-SmartCaseAI"
Documentation = "https://github.com/yourusername/Phoenix-SmartCaseAI#readme"
Repository = "https://github.com/yourusername/Phoenix-SmartCaseAI.git"
Issues = "https://github.com/yourusername/Phoenix-SmartCaseAI/issues"

[project.scripts]
phoenix-smartcase = "SmartCaseAI.cli:main"

[tool.setuptools.packages.find]
include = ["SmartCaseAI*"]
exclude = ["tests*"]

[tool.setuptools.package-data]
SmartCaseAI = ["*.md", "*.txt"]

[tool.setuptools.dynamic]
version = {attr = "SmartCaseAI._version.__version__"}

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]